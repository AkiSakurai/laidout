name: ci
on:
  push:
    branches:
      - master
    tags:
      - "**"

  pull_request:
    branches:
      - master

jobs:
  maketar:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: "Checkout Laidout"
        uses: actions/checkout@v2
        with:
          path: laidout

      - name: "Checkout Laxkit"
        uses: actions/checkout@v2
        with:
          repository: laidout/laxkit
          ref: master
          path: laidout/laxkit

      - name: Install dependencies (macos)
        if: ${{ matrix.os == 'macos-latest'}}
        run: |
          brew update
          brew install coreutils harfbuzz graphicsmagick imlib2 openssl@1.1 sqlite gegl mesa-glu ftgl xinput cups 

      - name: Install dependencies (linux)
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: |
          sudo apt update
          sudo apt-get install g++ pkg-config libpng-dev libreadline-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxft-dev libcups2-dev libimlib2-dev libfontconfig-dev libfreetype6-dev libssl-dev xutils-dev libcairo2-dev libharfbuzz-dev libsqlite3-dev libgraphicsmagick++1-dev mesa-common-dev libglu1-mesa-dev libftgl-dev zlib1g-dev libgegl-dev gettext

      - name: Configure (macos)
        if: ${{ matrix.os == 'macos-latest'}}
        env:
          PKG_CONFIG_PATH: /usr/local/opt/openssl@1.1/lib/pkgconfig/
        run: |
          cd laidout
          ./configure --laxkit=`pwd`/laxkit/lax --prefix=`pwd`/../installed --relocatable  --extra-cppflags "-std=c++11 `pkg-config --cflags openssl`" --pkg-config-path "/usr/local/opt/openssl@1.1/lib/pkgconfig/" --extra-ldflags "`pkg-config --libs imlib2 openssl freetype2 sqlite3 imlib2 cairo x11 fontconfig GraphicsMagick++ xft xrender`"

      - name: Configure (linux)
        if: ${{ matrix.os == 'ubuntu-latest'}}
        run: |
          cd laidout
          ./configure --laxkit=`pwd`/laxkit/lax --prefix=`pwd`/../installed --relocatable --gegl-version gegl-0.4

      - name: Build
        run: |
          cd laidout
          make -j3

      - name: Make icons
        run: |
          cd laidout
          #echo make icons curdir: `pwd`
          make -C src/icons all-with-lax

      - name: Set version
        run: |
          cd laidout
          echo "LAIDOUT_VERSION=`cat src/laidout_version.txt`" >> $GITHUB_ENV

      - name: Install
        run: |
          cd laidout
          make install

      - name: Package
        run: |
          mv installed laidout-${{ env.LAIDOUT_VERSION }}
          tar cjv laidout-${{ env.LAIDOUT_VERSION }} > laidout-bin-${{ env.LAIDOUT_VERSION }}-${{ runner.os }}.tar.bz2

      - name: Upload-Artifact (Tar)
        uses: actions/upload-artifact@v3
        with:
          name: laidout-bin-${{ env.LAIDOUT_VERSION }}-${{ runner.os }}.tar.bz2
          path: laidout-bin-${{ env.LAIDOUT_VERSION }}-${{ runner.os }}.tar.bz2


  release:
    needs: maketar
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Continous Build
        uses: "marvinpinto/action-automatic-releases@latest"
        if: startsWith(github.ref, 'refs/heads/')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "gh_continous"
          prerelease: true
          title: "Continous Build"
          files: |
            **

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            **
